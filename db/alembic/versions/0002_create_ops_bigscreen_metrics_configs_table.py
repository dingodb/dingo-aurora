"""create ops_bigscreen_metrics_configs table

Revision ID: 0002
Revises: 0001
Create Date: 2025-01-10 16:28:45.273721

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from datetime import datetime

# revision identifiers, used by Alembic.
revision: str = '0002'
down_revision: Union[str, None] = '0001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### 大屏指标配置信息 ###
    bigscreen_metrics_configs_table = op.create_table(
        "ops_bigscreen_metrics_configs",
        sa.Column("id", sa.String(length=128), nullable=False, comment='大屏指标配置信息对象id'),
        sa.Column("name", sa.String(length=128), nullable=False, comment='指标名称'),
        sa.Column("query", sa.String(length=511), nullable=False, comment='指标的promQL语句'),
        sa.Column("description", sa.String(length=255), nullable=True, comment='指标描述信息'),
        sa.Column("sub_class", sa.String(length=128), nullable=True, comment='指标分类'),
        sa.Column("unit", sa.String(length=32), nullable=True, comment='指标单位'),
        sa.Column("extra", sa.Text(), nullable=True, comment='扩展信息'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name'),
        comment='大屏指标配置信息表'
    )
    # ### 初始化大屏指标配置信息 ###
    # id:  uuid.uuid4().hex
    op.bulk_insert(bigscreen_metrics_configs_table,
        [{'name': 'gpu_average_temperature',
          'description': 'GPU平均温度',
          'query': 'avg(DCGM_FI_DEV_GPU_TEMP)',
          'unit': 'celsius',
          'id': 'ad708de818eb454487502aa9d8acf346',
          'sub_class': None,
          'extra': None},
         {'name': 'gpu_total_power',
          'description': 'GPU总功率',
          'query': 'sum(DCGM_FI_DEV_POWER_USAGE)',
          'unit': 'watt',
          'id': 'b776e2b78c334700b1c19a5c0dadf05d',
          'sub_class': None,
          'extra': None},
         {'name': 'gpu_average_utilization',
          'description': 'GPU平均使用率',
          'query': 'avg(DCGM_FI_DEV_GPU_UTIL)',
          'extra': 'GPU使用率',
          'id': '1d491d9668024740a325d68c8bebba9a',
          'unit': None,
          'sub_class': None},
         {'name': 'gpu_nodes_count',
          'description': 'GPU总节点数',
          'query': 'count(node_uname_info{job="consul",hostname=~".*gpu.*"})',
          'id': '2be67f3904cd44549e3ff1896964da64',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'storage_nodes_count',
          'description': '存储节点数',
          'query': 'count(sum by (hostname) (ceph_osd_metadata))',
          'id': '085f1d7cc889468cba27b1879aac159f',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'gpu_count',
          'description': 'GPU卡数',
          'query': 'count(DCGM_FI_DEV_GPU_UTIL)',
          'extra': 'GPU总卡数',
          'id': '8715dae4e9e74f96a51b9eb22faaf08a',
          'unit': None,
          'sub_class': None},
         {'name': 'gpu_memory_usage',
          'description': 'GPU显存使用率',
          'query': 'avg(DCGM_FI_DEV_FB_USED/(DCGM_FI_DEV_FB_USED+DCGM_FI_DEV_FB_FREE))',
          'id': '18ae0bd6100149ddb7a35f86df698848',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'gpu_using_nodes_count',
          'description': 'GPU使用节点数',
          'query': 'count(sum(DCGM_FI_DEV_GPU_UTIL)by(Hostname) != 0)',
          'id': '990b3d9f60cb4d91838be381940193f0',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'ib_bandwidth',
          'description': 'IB网络带宽',
          'query': 'sum(rate(node_infiniband_port_data_transmitted_bytes_total[5m]) + rate(node_infiniband_port_data_received_bytes_total[5m]))',
          'extra': 'IB网络总带宽',
          'unit': 'byte',
          'id': '16edf336a2fd4cc4a5d28ef49b581144',
          'sub_class': None},
         {'name': 'gpu_jobs_count',
          'description': 'GPU任务数',
          'query': 'sum(node_nhc_compute_apps_count)',
          'id': 'a547c14800db43b7a884ce13ca8e7c53',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'storage_capacity',
          'description': '存储总容量',
          'query': 'ceph_cluster_total_bytes{}',
          'unit': 'byte',
          'id': '64dbe75f3d8845c6bc61422c05cc255e',
          'sub_class': None,
          'extra': None},
         {'name': 'storage_used_capacity',
          'description': '存储使用量',
          'query': 'ceph_cluster_total_used_bytes{}',
          'unit': 'byte',
          'id': '2458e59048244fd7a0a62926b511f459',
          'sub_class': None,
          'extra': None},
         {'name': 'storage_usage',
          'description': '存储使用率',
          'query': 'ceph_cluster_total_used_bytes{}/ceph_cluster_total_bytes{}',
          'id': '713097db56de4a39be7d3ea15473203a',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'storage_write_throughput',
          'description': '存储实时写吞吐',
          'query': 'sum(rate(ceph_osd_op_w_in_bytes[5m]))',
          'unit': 'byte',
          'id': '4a9c910587de4af7993837545f0f50fb',
          'sub_class': None,
          'extra': None},
         {'name': 'storage_read_throughput',
          'description': '存储实时读吞吐',
          'query': 'sum(rate(ceph_osd_op_r_out_bytes[5m]))',
          'unit': 'byte',
          'id': '062bf0de7f714a77b6c3ff9bf6ab67ac',
          'sub_class': None,
          'extra': None},
         {'name': 'network_bandwidth',
          'description': '核心网络实时出口带宽',
          'query': 'librenms_ifOutOctets_rate{instance="10.222.2.11",ifName="WAN0/0/0"}',
          'unit': 'bit',
          'id': '7317d5e64371493788d78f83a441edac',
          'sub_class': None,
          'extra': None},
         {'name': 'alert_count',
          'description': '告警数',
          'query': 'undefined',
          'id': '948e8227565b4069bf6b4725b9c8c441',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'gpu_fallen_count',
          'description': 'GPU掉卡数',
          'query': 'undefined',
          'id': '787e7d22a642456ab387ed2ec1540b20',
          'unit': None,
          'sub_class': None,
          'extra': None},
         {'name': 'total_power',
          'description': '总功率',
          'query': 'undefined',
          'unit': 'watt',
          'extra': '机房实时功率',
          'id': '8baeacced71548fc9ec648e7f9e88c9c',
          'sub_class': None},
          {'name': 'stack_manage_node',
          'description': 'CPU管理节点数',
          'query': 'count(up{ job="mysqld"})',
          'id': '0f81664f198042a38380f1628860727b',
          'unit': None,
          'sub_class': None,
          'extra': None},
          {'name': 'stack_compute_node',
          'description': 'CPU计算节点数',
          'query': 'count(up{ job="libvirt_exporter"})',
          'id': '0c2122f73cc843fa96d0e0bf4e8b5e7a',
          'unit': None,
          'sub_class': None,
          'extra': None},
		  {'name': 'stack_baremetal_node',
          'description': '裸金属节点数',
          'query': 'count(baremetal_exhaust_temp_celsius)',
          'id': '5227384e4e474d80aafb7c6e7ca84636',
          'unit': None,
          'sub_class': None,
          'extra': None},
          {'name': 'stack_fault_nodes_count',
          'description': '故障节点数',
          'query': 'count(up{job="fluentd"} == 0)',
          'id': 'c5a08232ba5b4d88a56f833f2a4a1a89',
          'unit': None,
          'sub_class': None,
          'extra': None},
          {'name': 'stack_vm_nodes_count',
          'description': '虚拟机节点数',
          'query': 'count(libvirt_domain_info_vstate{job=~"libvirt_exporter"})',
          'id': 'fe9ee94198f74ea29e8f241f56927e0f',
          'unit': None,
          'sub_class': None,
          'extra': None},
          {'name': 'stack_memory_total',
          'description': '内存总量',
          'query': 'sum(openstack_placement_resource_total{resourcetype="MEMORY_MB"}) / 1024',
          'extra': '内存总大小',
          'unit': 'GB',
          'id': 'f16df870fc5f43589cf27a9513c4905f',
          'sub_class': None},
          {'name': 'stack_memory_usage',
          'description': '内存使用率',
          'query': 'sum(openstack_placement_resource_usage{resourcetype="MEMORY_MB"}) / sum(openstack_placement_resource_total{resourcetype="MEMORY_MB"}) * 100',
          'extra': '内存使用率',
          'unit': 'percent',
          'id': '915fff11ffe9441aa58ec762b65aae0c',
          'sub_class': None},
          {'name': 'stack_cpu_total',
          'description': 'CPU总量',
          'query': 'sum(openstack_placement_resource_total{resourcetype="VCPU"}) * 4',
          'extra': 'CPU总大小',
          'unit': 'cores',
          'id': 'b62d3e5396f24831b031f2f59afcd5de',
          'sub_class': None},
          {'name': 'stack_cpu_usage',
          'description': 'CPU使用率',
          'query': 'sum(openstack_placement_resource_usage{resourcetype="VCPU"}) / sum(openstack_placement_resource_total{resourcetype="VCPU"}) / 4 * 100',
          'extra': 'CPU使用率',
          'unit': 'percent',
          'id': 'f59fc09f942441299798f132788b3801',
          'sub_class': None},
		  {'name': 'stack_project_vm',
          'description': '项目虚拟机',
          'query': 'count by (project_name) (libvirt_domain_info_meta)',
          'extra': '项目虚拟机',
          'unit': None,
          'id': '13b0861d164f46b3becb107baa438e7b',
          'sub_class': None},
		  {'name': 'stack_project_vm_activate',
          'description': '项目虚拟机运行状态',
          'query': 'count by (project_name) (libvirt_domain_info_meta*on(domain) group_left() libvirt_domain_info_vstate == 1)',
          'extra': '项目虚拟机运行状态',
          'unit': None,
          'id': '97d64d3c89ee496597e4042b87aba51d',
          'sub_class': None}]
    )

    bigscreen_metrics_table = op.create_table(
        "ops_bigscreen_metrics",
        sa.Column("id", sa.String(length=128), nullable=False, comment='大屏指标对象id'),
        sa.Column("name", sa.String(length=128), sa.ForeignKey('ops_bigscreen_metrics_configs.name'), nullable=False, comment='指标名称'),
        sa.Column("data", sa.Text(), nullable=True, comment='指标数据'),
        sa.Column("region", sa.String(length=128), nullable=True, comment='地区（智算中心）'),
        sa.Column("last_modified", sa.DateTime(), nullable=True, comment='最近修改时间'),
        sa.PrimaryKeyConstraint('id'),
        # sa.UniqueConstraint('name'),
        comment='大屏指标表'
    )

def downgrade() -> None:
    op.drop_table('ops_bigscreen_metrics')
    op.drop_table('ops_bigscreen_metrics_configs')

